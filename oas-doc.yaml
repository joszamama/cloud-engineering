openapi: 3.0.3
info:
  version: 1.0.0
  title: ACME Explorer
  description: Projecto para la asignatura de Cloud Engineering 

paths:
  /api/v1/actors:
    x-router-controller: ActorController
    get:
      description: Returns all actors
      operationId: getActor
      responses:
        200:
          description: Actor list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/actor'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Creates a new actor
      operationId: addActor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/actor'
        description: Actor to be created
        required: true
      responses:
        201:
          description: Actor
        default:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/error'
  /api/v1/actors/{_id}:
    x-router-controller: ActorController
    get:
      description: Returns a single actor by its _id
      operationId: findBy_id
      parameters:
        - required: true
          name: _id
          description: _id of the actor to fetch
          in: path
          schema:
            type: string
      responses:
        200:
          description: Actor found by _id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/actor'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      description: Update a actor based on its _id
      operationId: updateActor
      parameters:
        - required: true
          name: _id
          description: _id of the actor to update
          in: path
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/actor'
        description: Actor to be updated
        required: true
      responses:
        '204':
          description: Actor updated
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      description: Deletes a single actor based on its _id
      operationId: deleteActor
      parameters:
        - required: true
          name: _id
          description: _id of the actor to delete
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Actor deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/v1/sponsorships:
    x-router-controller: SponsorshipController
    get:
      description: Returns all sponsorships
      operationId: getSponsorship
      responses:
        200:
          description: Sponsorship list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/sponsorship'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Creates a new sponsorship
      operationId: addSponsorship
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sponsorship'
        description: Sponsorship to be created
        required: true
      responses:
        201:
          description: Sponsorship
        default:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/error'
  /api/v1/sponsorships/{_id}:
    x-router-controller: SponsorshipController
    get:
      description: Returns a single sponsorship by its _id
      operationId: findSponsorshipBy_id
      parameters:
        - required: true
          name: _id
          description: _id of the sponsorship to fetch
          in: path
          schema:
            type: string
      responses:
        200:
          description: Sponsorship found by _id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sponsorship'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      description: Update a sponsorship based on its _id
      operationId: updateSponsorship
      parameters:
        - required: true
          name: _id
          description: _id of the sponsorship to update
          in: path
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sponsorship'
        description: Sponsorship to be updated
        required: true
      responses:
        '204':
          description: Sponsorship updated
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      description: Deletes a single sponsorship based on its _id
      operationId: deleteSponsorship
      parameters:
        - required: true
          name: _id
          description: _id of the sponsorship to delete
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Sponsorship deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/v1/trips:
    x-router-controller: TripController
    get:
      description: Returns all trips
      operationId: getTrip
      responses:
        200:
          description: Trip list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/trip'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Creates a new trip
      operationId: addTrip
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/trip'
        description: Trip to be created
        required: true
      responses:
        201:
          description: Trip
        default:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/error'
  /api/v1/trips/{ticker}:
    x-router-controller: TripController
    get:
      description: Returns a single trip by its ticker
      operationId: findByticker
      parameters:
        - required: true
          name: ticker
          description: ticker of the trip to fetch
          in: path
          schema:
            type: string
      responses:
        200:
          description: Trip found by ticker
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trip'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      description: Update a trip based on its ticker
      operationId: updateTrip
      parameters:
        - required: true
          name: ticker
          description: ticker of the trip to update
          in: path
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/trip'
        description: Trip to be updated
        required: true
      responses:
        '204':
          description: Trip updated
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      description: Deletes a single trip based on its ticker
      operationId: deleteTrip
      parameters:
        - required: true
          name: ticker
          description: ticker of the trip to delete
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Trip deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/v1/stages:
    x-router-controller: StageController
    get:
      description: Returns all stages
      operationId: getStage
      responses:
        200:
          description: Stage list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/stage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Creates a new stage
      operationId: addStage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stage'
        description: Stage to be created
        required: true
      responses:
        201:
          description: Stage
        default:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/error'
  /api/v1/stages/{_id}:
    x-router-controller: StageController
    get:
      description: Returns a single stage by its _id
      operationId: findStageBy_id
      parameters:
        - required: true
          name: _id
          description: _id of the stage to fetch
          in: path
          schema:
            type: string
      responses:
        200:
          description: Stage found by _id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/stage'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      description: Update a stage based on its _id
      operationId: updateStage
      parameters:
        - required: true
          name: _id
          description: _id of the stage to update
          in: path
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/stage'
        description: Stage to be updated
        required: true
      responses:
        '204':
          description: Stage updated
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      description: Deletes a single stage based on its _id
      operationId: deleteStage
      parameters:
        - required: true
          name: _id
          description: _id of the stage to delete
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Stage deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/v1/applications:
    x-router-controller: ApplicationController
    get:
      description: Returns all applications
      operationId: getApplication
      responses:
        200:
          description: Application list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/application'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Creates a new application
      operationId: addApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/application'
        description: Application to be created
        required: true
      responses:
        201:
          description: Application
        default:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/error'
  /api/v1/applications/{_id}:
    x-router-controller: ApplicationController
    get:
      description: Returns a single application by its _id
      operationId: findApplicationBy_id
      parameters:
        - required: true
          name: _id
          description: _id of the application to fetch
          in: path
          schema:
            type: string
      responses:
        200:
          description: Application found by _id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/application'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      description: Update a application based on its _id
      operationId: updateApplication
      parameters:
        - required: true
          name: _id
          description: _id of the application to update
          in: path
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/application'
        description: Application to be updated
        required: true
      responses:
        '204':
          description: Application updated
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      description: Deletes a single application based on its _id
      operationId: deleteApplication
      parameters:
        - required: true
          name: _id
          description: _id of the application to delete
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Application deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /api/v1/finders:
    x-router-controller: FinderController
    get:
      description: Returns all finders
      operationId: getFinder
      responses:
        200:
          description: Finder list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/finder'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Creates a new finder
      operationId: addFinder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/finder'
        description: Finder to be created
        required: true
      responses:
        201:
          description: Finder
        default:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/error'
  /api/v1/finders/{_id}:
    x-router-controller: FinderController
    get:
      description: Returns a single finder by its _id
      operationId: findFinderBy_id
      parameters:
        - required: true
          name: _id
          description: _id of the finder to fetch
          in: path
          schema:
            type: string
      responses:
        200:
          description: Finder found by _id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/finder'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      description: Update a finder based on its _id
      operationId: updateFinder
      parameters:
        - required: true
          name: _id
          description: _id of the finder to update
          in: path
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/finder'
        description: Finder to be updated
        required: true
      responses:
        '204':
          description: Finder updated
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      description: Deletes a single finder based on its _id
      operationId: deleteFinder
      parameters:
        - required: true
          name: _id
          description: _id of the finder to delete
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Finder deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

components:
  schemas:
    actor:
        type: object
        required:
          - _id
          - name
          - surname
          - password
          - mail
          - preferred_lenguage
        properties:
          _id:
            type: string
          name:
            type: string
          surname:
            type: string
          password:
            type: string
            writeOnly: true
          mail:
            type: string
            format: email
          phone:
            type: string
          address:
            type: string
          ban:
            type: boolean
          role:
            type: string
          preferred_lenguage:
            type: string
            enum: [Spanish, English]
    sponsorship:
        type: object
        required:
          - _id
        properties:
          _id:
            type: string
          banner:
            type: string
          link:
            type: string
    trip:
        type: object
        required:
          - ticker
          - title
          - description
          - price
          - requirements
          - startDate
          - endDate
          - is_cancelled
        properties:
          ticker:
            type: string
          title:
            type: string
          description:
            type: string
          price:
            type: number
          requirements:
            type: array
            items: 
              type: string
          startDate:
            type: string
            format: date
          endDate:
            type: string
            format: date
          pictures:
            type: string
          is_cancelled:
            type: boolean
          cancel_reason:
            type: string
    stage:
        type: object
        required:
          - _id
          - title
          - description
          - price
        properties:
          _id:
            type: string
          title:
            type: string
          description:
            type: string
          price:
            type: number
    application:
        type: object
        required:
          - _id
          - creation
          - status
        properties:
          _id:
            type: string
          creation:
            type: string
            format: date
          status:
            type: string
            enum: [PENDING, REJECTED, DUE, ACCEPTED, CANCELLED]
            default: PENDING
          reject_reason:
            type: string
          reject_comment:
            type: string
    finder:
        type: object
        required:
          - _id
        properties:
          _id:
            type: string
          keyword:
            type: string
            default: null
          price_from:
            type: number
            default: null
          price_to:
            type: number
            default: null
          date_from:
            type: string
            format: date
            default: null
          date_to:
            type: string
            format: date
            default: null
    error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
      additionalProperties: true